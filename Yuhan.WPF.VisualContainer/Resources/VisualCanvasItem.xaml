<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vc="clr-namespace:Yuhan.WPF.VisualContainer"
                    xmlns:local="clr-namespace:Yuhan.WPF.Helpers;assembly=Yuhan.WPF"
                    xmlns:converter="clr-namespace:Yuhan.WPF.Converters;assembly=Yuhan.WPF">
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converter:BooleanToVisibilityConverter x:Key="InvertBooleanToVisibilityConverter" True="Collapsed" False="Visible" />
                    
    <Style TargetType="{x:Type vc:VisualCanvasItem}" >
        <Setter Property="Width" Value="{Binding Path=Width, Mode=TwoWay}" />
        <Setter Property="Height" Value="{Binding Path=Height, Mode=TwoWay}" />
        <Setter Property="Background" Value="Red" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type vc:VisualCanvasItem}">
                    <Grid>
                        <Rectangle RadiusX="2" RadiusY="2" Margin="2, 0" Stroke="Black"  
                               Visibility="{Binding IsDrawing, Mode=TwoWay, 
                            Converter={StaticResource InvertBooleanToVisibilityConverter},
                            RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type vc:VisualCanvasItem}}}" />
                        <Button Margin="2, 0" Opacity="0.7" Padding="0"
                                Visibility="{Binding IsDrawn, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type vc:VisualCanvasItem}}}">
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </Button>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDrawing" Value="true">
                            <Setter Property="Background" Value="Blue" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>